name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js for frontend
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: Lint frontend code
        working-directory: ./frontend
        run: npm run lint

      - name: Run frontend tests
        working-directory: ./frontend
        run: npm run test

      - name: Set up PHP for backend
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: pgsql, bcmath, ctype, fileinfo, json, mbstring, openssl, pdo, tokenizer, xml

      - name: Install backend dependencies
        working-directory: ./backend
        run: composer install

      - name: Run backend tests
        working-directory: ./backend
        run: php artisan test

  build-docker-images:
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push backend Docker image
        working-directory: ./docker
        run: |
          docker build -f backend.Dockerfile -t mharooney/mates-backend:latest .
          docker push mharooney/mates-backend:latest

      - name: Build and push frontend Docker image
        working-directory: ./docker
        run: |
          docker build -f frontend.Dockerfile -t mharooney/mates-frontend:latest .
          docker push mharooney/mates-frontend:latest

      - name: Build and push Python scripts Docker image
        working-directory: ./docker
        run: |
          docker build -f python.Dockerfile -t mharooney/mates-python:latest .
          docker push mharooney/mates-python:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-docker-images
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to staging/production
        run: |
          echo "Deploying to staging/production..."
          # Add deployment logic here (e.g., using AWS, Azure, or Google Cloud)